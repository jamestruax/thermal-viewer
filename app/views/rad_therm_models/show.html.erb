<script>
  var camera, scene, renderer;
  var mesh;

  init();
  animate();

  function init() {

    renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.setClearColorHex( 0xffffff, 1 );
    document.body.appendChild( renderer.domElement );

    camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
    camera.position.z = 400;

    scene = new THREE.Scene();

    var geometry = new THREE.Geometry();<% index = 0 %><% @model.geometry.polygons.each do |poly| %><% poly.vertices.each do |vertex| %>
    geometry.vertices.push(new THREE.Vector3(<%= vertex.x%>,<%= vertex.y%>,<%= vertex.z%>));<% end %>

	geometry.faces.push(new THREE.Face3(<%= index%>,<%= index+1%>,<%= index+2%>));<% index += 3 %><% end %>
	geometry.computeBoundingSphere();

	var material = new THREE.MeshBasicMaterial({
		color : 0x000000,
		wireframe : true
	});

	mesh = new THREE.Mesh(geometry, material);
	scene.add(mesh);

	//

	window.addEventListener('resize', onWindowResize, false);

	}

	function onWindowResize() {

		camera.aspect = window.innerWidth / window.innerHeight;
		camera.updateProjectionMatrix();

		renderer.setSize(window.innerWidth, window.innerHeight);

	}

	function animate() {

		requestAnimationFrame(animate);

		mesh.rotation.x += 0.0;
		mesh.rotation.y += 0.05;

		renderer.render(scene, camera);

	}

</script>